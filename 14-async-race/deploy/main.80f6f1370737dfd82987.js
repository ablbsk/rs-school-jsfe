!function(){"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),function(){var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var i=n.getElementsByTagName("script");i.length&&(e=i[i.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e}();class e{constructor(t){this.linkDOM=t}addListener(){this.linkDOM.addEventListener("click",(t=>{t.preventDefault();const e="garageLink"===t.target.id?"renderGaragePage":"renderWinnersPage",n=new Event(e,{bubbles:!0});document.dispatchEvent(n)}))}}function n(t,e,n){const i=document.createElement(t);return i.classList.add(...e),n&&(i.innerHTML=n),i}function i(t,e){t?e.classList.add("disabled"):e.classList.remove("disabled")}class a{constructor(t){this.containerDOM=t,this.headerDOM=n("header",["header"])}render(){this.headerDOM.innerHTML='\n      <nav class="nav">\n        <ul class="nav__list">\n          <li class="nav__item">\n            <a id="garageLink" class="nav__link" href="/">Garage</a>\n          </li>\n          <li class="nav__item">\n            <a id="winnersLink" class="nav__link" href="/winners">Winners</a>\n          </li>\n        </ul>\n      </nav>\n    ',this.containerDOM.append(this.headerDOM),this.addListenerToLinks()}addListenerToLinks(){document.querySelectorAll(".nav__link").forEach((t=>{new e(t).addListener()}))}}var r=function(t,e,n,i){return new(n||(n=Promise))((function(a,r){function s(t){try{c(i.next(t))}catch(t){r(t)}}function o(t){try{c(i.throw(t))}catch(t){r(t)}}function c(t){var e;t.done?a(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,o)}c((i=i.apply(t,e||[])).next())}))};const s="http://localhost:3000",o=(t=1,e=7)=>r(void 0,void 0,void 0,(function*(){try{const n=yield fetch(`${s}/garage?_limit=${e}&_page=${t}`),i=yield n.json();return 200===n.status?{cars:i,count:n.headers.get("X-Total-Count")||"0"}:null}catch(t){throw new Error(t)}})),c=t=>r(void 0,void 0,void 0,(function*(){try{yield fetch(`${s}/garage`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})}catch(t){throw new Error(t)}}));class d{constructor(){this.toolsDOM=n("div",["tools"])}render(){return this.toolsDOM.innerHTML='\n      <div class="entity">\n        <div class="entity__form">\n          <input id="createTrackName" class="entity__input" type="search" autocomplete="off">\n          <input id="createTrackColor" class="entity__color" type="color">\n          <button id="createTrackButton" class="button disabled">Create</button>\n        </div>\n        <div class="entity__form">\n          <input id="updateTrackName" class="entity__input" type="search" autocomplete="off">\n          <input id="updateTrackColor" class="entity__color" type="color">\n          <button id="updateTrackButton" class="button disabled">Update</button>\n        </div>\n      </div>\n      <div class="options">\n        <button id="raceButton" class="button">Race</button>\n        <button id="resetButton" class="button button--stop disabled">Reset</button>\n        <button id="generateCars" class="button">Generate cars</button>\n      </div>\n    ',this.addListeners(),this.toolsDOM}addListeners(){const t=this.toolsDOM.querySelector("#createTrackButton"),e=this.toolsDOM.querySelector("#updateTrackButton"),n=this.toolsDOM.querySelector("#createTrackName"),a=this.toolsDOM.querySelector("#updateTrackName");n.addEventListener("input",(e=>{i(e.target.value.trim().length<4,t)})),a.addEventListener("input",(t=>{i(t.target.value.trim().length<4,e)})),t.addEventListener("click",(()=>{document.dispatchEvent(new Event("createNewTrack",{bubbles:!0})),n.value="",i(!0,t)}));const r=this.toolsDOM.querySelector("#raceButton"),s=this.toolsDOM.querySelector("#resetButton"),o=this.toolsDOM.querySelector("#generateCars");r.addEventListener("click",(()=>document.dispatchEvent(new Event("startRace",{bubbles:!0})))),s.addEventListener("click",(()=>document.dispatchEvent(new Event("resetRace",{bubbles:!0})))),o.addEventListener("click",(()=>document.dispatchEvent(new Event("generate",{bubbles:!0}))))}}var h=t.p+"assets/images/finish.jpg";class l{constructor(){this.notificationDOM=n("div",["notification"])}render(t,e){this.notificationDOM.innerHTML=`<span class="modal__line">${t}: ${e}</span>`,this.notificationDOM.classList.add("Complete"===t?"notification--complete":"notification--error"),document.body.append(this.notificationDOM),this.remove()}remove(){setTimeout((()=>this.notificationDOM.remove()),1e3)}}class u{constructor(t){this.trackDOM=n("div",["track"]),this.notification=new l,this.animation=null,this.car=t}render(){return this.trackDOM.innerHTML=`\n      <div class="track__controls">\n        <p class="track__number">${this.car.id}</p>\n        <div class="track__cell">\n          <button class="button button-select">Select</button>\n          <button class="button button-delete">Remove</button>\n        </div>\n        <div class="track__cell">\n          <button class="button button-start button--special button--start">Start</button>\n          <button class="button button-stop button--special button--stop disabled">Stop</button>\n        </div>\n      </div>\n      <p class="track__name">${this.car.name}</p>\n      <div class="track__track">\n        <svg class="track__icon">\n          <circle cx="50" cy="50" r="40" fill="${this.car.color}" />\n        </svg>\n      </div>\n      <img class="track__finish" src="${h}" alt="Finish"> \n    `,this.addListeners(),this.trackDOM}addListeners(){const t=this.trackDOM.querySelector(".button-start"),e=this.trackDOM.querySelector(".button-stop"),n=this.trackDOM.querySelector(".button-delete"),i=this.trackDOM.querySelector(".button-select");t.addEventListener("click",(()=>this.start())),e.addEventListener("click",(()=>this.stop())),n.addEventListener("click",(()=>this.remove())),i.addEventListener("click",(()=>this.update()))}animateDrive(t){const e=t.result.distance/t.result.velocity,n=this.trackDOM.querySelector("svg"),i="calc(100% - 100px)";this.animation=n.animate([{left:"0px"},{left:i}],{duration:e,easing:"ease-in"}),this.animation.play(),this.animation.onfinish=()=>{n.style.left=i}}start(){const{id:t}=this.car;return(t=>r(void 0,void 0,void 0,(function*(){try{const e=yield fetch(`${s}/engine?id=${t}&status=started`,{method:"PATCH"}),n=yield e.json();return{status:e.status,result:n}}catch(t){throw new Error(t)}})))(t).then((t=>{this.changeActivityOfButtons(!0),this.animateDrive(t)})).then((()=>(t=>r(void 0,void 0,void 0,(function*(){try{return(yield fetch(`${s}/engine?id=${t}&status=drive`,{method:"PATCH"})).status}catch(t){throw new Error(t)}})))(t))).then((t=>new Promise((e=>{var n;500===t?(null===(n=this.animation)||void 0===n||n.pause(),this.prepareTitleToStart(!0)):200===t&&e()}))))}stop(){const t=this.trackDOM.querySelector("svg");var e;(e=this.car.id,r(void 0,void 0,void 0,(function*(){try{const t=yield fetch(`${s}/engine?id=${e}&status=stopped`,{method:"PATCH"}),n=yield t.json();return{status:t.status,result:n}}catch(t){throw new Error(t)}}))).then((e=>{var n;200===e.status&&(null===(n=this.animation)||void 0===n||n.cancel(),this.changeActivityOfButtons(!1),t.removeAttribute("style"))})).catch((()=>this.notification.render("Fail","something went wrong...")))}remove(){var t;(t=this.car.id,r(void 0,void 0,void 0,(function*(){try{yield fetch(`${s}/garage/${t}`,{method:"DELETE"})}catch(t){throw new Error(t)}}))).then((()=>{this.notification.render("Complete",`remove ${this.car.name}`),document.dispatchEvent(new Event("updateTracks",{bubbles:!0}))})).catch((()=>this.notification.render("Fail",`remove ${this.car.name}`)))}update(){const t=document.getElementById("updateTrackName"),e=document.getElementById("updateTrackColor"),n=document.getElementById("updateTrackButton");document.body.scrollIntoView(),t.value=this.car.name,e.value=this.car.color,n.addEventListener("click",(()=>{var i;t.value&&(this.car.name=t.value,this.car.color=e.value,(i=this.car,r(void 0,void 0,void 0,(function*(){try{yield fetch(`${s}/garage/${i.id}`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)})}catch(t){throw new Error(t)}}))).then((()=>{this.updateDOM(),this.notification.render("Complete","update car")})).catch((()=>this.notification.render("Fail","update car"))),t.value="",n.classList.add("disabled"))}))}updateDOM(){const t=this.trackDOM.querySelector(".track__name"),e=this.trackDOM.querySelector("circle");t.textContent=this.car.name,e.style.fill=this.car.color}prepareTitleToStart(t=!1){const e=this.trackDOM.querySelector(".track__name");t?e.classList.add("track__name--crash"):e.classList.remove("track__name--crash")}changeActivityOfButtons(t){const e=this.trackDOM.querySelector(".button-start"),n=this.trackDOM.querySelector(".button-stop"),a=this.trackDOM.querySelector(".button-delete"),r=this.trackDOM.querySelector(".button-select");i(t,e),i(!t,n),i(t,a),i(t,r)}}class p{constructor(t,e){this.count=t,this.page=e,this.paginationDOM=n("div",["pagination"]),this.prevButtonDOM=n("button",["button","button-prev"],"prev"),this.nextButtonDOM=n("button",["button","button-next"],"next"),this.labelDOM=n("span",["pagination__label"],this.viewPageCount())}render(){return this.addListeners(),this.changeActivityOfButtons(),this.paginationDOM.append(this.prevButtonDOM,this.labelDOM,this.nextButtonDOM),this.paginationDOM}addListeners(){this.prevButtonDOM.addEventListener("click",(()=>document.dispatchEvent(new Event("prevPage",{bubbles:!0})))),this.nextButtonDOM.addEventListener("click",(()=>document.dispatchEvent(new Event("nextPage",{bubbles:!0}))))}viewPageCount(){return`${this.page} / ${Math.ceil(this.count/7)}`}updatePageLabel(t,e){this.page=e,this.count=t,this.changeActivityOfButtons(),this.labelDOM.innerHTML=this.viewPageCount()}changeActivityOfButtons(t=!1){const e=this.page<2,n=this.page===Math.ceil(this.count/7);i(t||e,this.prevButtonDOM),i(t||n,this.nextButtonDOM)}}class v{constructor(t,e){this.modalDOM=n("div",["modal"]),this.winner=t,this.time=e}render(){return this.modalDOM.innerHTML=`\n      <p class="modal__line">Winner: ${this.winner.name} | ${this.winner.id}<span>  \n      <p class="modal__line">Time: ${this.time} sec<span>  \n    `,this.modalDOM}remove(){this.modalDOM.remove()}}var g={Audi:["A6 C6","E-TRON","S8 В4","R8","200 GTO"],BMW:["F10","E46","E30","E65","E90","E32","F60"],Ferrari:["612 Scaglietti","599 GTB Fiorano","488 Pista","458 Italia"],Jaguar:["F10","E46","E30","E65","E90","E32","F60"],KIA:["I‑PACE","F‑PACE","E‑PACE","F‑TYPE"],Mitsubishi:["EVO 5","EVO 6","EVO 8","EVO X"],Honda:["S2000","CIVIC","Prelude","Accord"],Lamborghini:["Aventador","Huracan","Reventon","Sesto Elemento","Urus","Gallardo"],Maserati:["Ghibli III","Levante","GranTurismo","Quattroporte"],Bugatti:["Chiron","Divo","EB110","Mistral"],Toyota:["Supra","Camry 3.2","Corolla E150"],Nissan:["180SX","S14","S15","350Z","370Z","300SX"],Volvo:["S60","S80","S90"],VW:["Passat B7","Golf PLUS","Scirocco"]};class m{constructor(t){this.wrapperDOM=n("section",["garage"]),this.tracksDOM=n("div",["garage__tracks"]),this.notification=new l,this.pagination=null,this.generateCount=100,this.garage=[],this.page=t,this.addListeners()}addListeners(){window.addEventListener("createNewTrack",(()=>this.createNewTrack())),window.addEventListener("updateTracks",(()=>this.updateTracks())),window.addEventListener("startRace",(()=>this.startRace())),window.addEventListener("resetRace",(()=>this.resetTracks())),window.addEventListener("generate",(()=>this.generateTracks())),window.addEventListener("prevPage",(()=>this.changePage(!1))),window.addEventListener("nextPage",(()=>this.changePage(!0)))}createNewTrack(){const t=document.getElementById("createTrackName"),e=document.getElementById("createTrackColor");if(t.value){const n={name:t.value,color:e.value};c(n).then((()=>{this.updateTracks(),this.notification.render("Complete","create car")})).catch((()=>this.notification.render("Fail","create car")))}}updateTracks(){this.garage=[],o(this.page).then((t=>{t&&(this.updateRender(t),this.pagination&&this.pagination.updatePageLabel(+t.count,this.page))})).catch((()=>this.notification.render("Fail","something went wrong...")))}startRace(){return t=this,e=void 0,a=function*(){if(this.garage.length){const t=document.getElementById("resetButton"),e=this.garage.map((t=>t.start().then((()=>t))));this.changeActivityOfElements(!0),i(!0,t);const n=yield Promise.race(e);this.showWinnerModal(n),Promise.race(e).then((t=>this.showWinnerModal(t))).then((()=>i(!1,t))).catch((()=>this.notification.render("Fail","something went wrong...")))}},new((n=void 0)||(n=Promise))((function(i,r){function s(t){try{c(a.next(t))}catch(t){r(t)}}function o(t){try{c(a.throw(t))}catch(t){r(t)}}function c(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,o)}c((a=a.apply(t,e||[])).next())}));var t,e,n,a}showWinnerModal(t){var e;if(null===(e=t.animation)||void 0===e?void 0:e.currentTime){const e=(t.animation.currentTime/1e3).toFixed(3),n=new v(t.car,+e);this.wrapperDOM.append(n.render()),setTimeout((()=>n.remove()),5e3)}}resetTracks(){this.garage.forEach((t=>{t.stop(),t.prepareTitleToStart(),t.changeActivityOfButtons(!1)})),this.changeActivityOfElements(!1)}generateTracks(){const t=Object.keys(g),e=[],n=(t,e)=>Math.floor(Math.random()*(e-t))+t,i=()=>{const e=t[n(0,t.length)];return`${e} ${g[e][n(0,g[e].length-1)]}`},a=()=>{const t=["#"];for(let e=0;e<6;e++)t.push(n(0,9).toString());return t.join("")};for(let t=0;t<this.generateCount;t++){const t={name:i(),color:a()};e.push(c(t))}Promise.all(e).then((()=>o(this.page))).then((t=>{t&&(this.updateRender(t),this.notification.render("Complete","generate new cars"),this.pagination&&this.pagination.updatePageLabel(+t.count,this.page))})).catch((()=>this.notification.render("Fail","generate new cars")))}changePage(t){this.garage=[],this.page=t?this.page+1:this.page-1,this.updateTracks()}render(){const t=new d;return this.wrapperDOM.append(t.render()),o(this.page).then((t=>{t&&(this.pagination=new p(+t.count,this.page),this.renderGarageDOM(t),this.wrapperDOM.append(this.pagination.render()))})).catch((()=>{this.renderErrorHeaderDOM(),this.notification.render("Fail","something went wrong...")})),this.wrapperDOM}renderGarageDOM(t){const e=n("div",["garage__container"]),i=n("h2",["title"],`Garage [${t.count}]`);this.renderTracksDOM(t.cars),e.append(i,this.tracksDOM),this.wrapperDOM.append(e)}renderTracksDOM(t){this.tracksDOM.innerHTML="",t.forEach((t=>{const e=new u(t);this.garage.push(e),this.tracksDOM.append(e.render())}))}renderErrorHeaderDOM(){const t=n("h2",["title","title--error"],"Hmm, are you started server?");this.wrapperDOM.append(t)}updateTitleCount(t){document.querySelector(".title").textContent=`Garage [${t}]`}updateRender(t){this.updateTitleCount(t.count),this.renderTracksDOM(t.cars)}changeActivityOfElements(t){i(t,document.querySelector(".entity"));const e=document.getElementById("raceButton"),n=document.getElementById("resetButton"),a=document.getElementById("generateCars");i(t,e),i(!t,n),i(t,a),this.pagination&&this.pagination.changeActivityOfButtons(t)}}class w{constructor(){this.wrapperDOM=this.createWrapper()}createWrapper(){const t=document.createElement("div");return t.classList.add("winners"),t.innerHTML='<h2 class="winners">Sorry, but winner\'s table is not realize :(</h2>',t}render(){return this.wrapperDOM}}class M{constructor(){this.containerDOM=document.getElementById("root"),this.mainDOM=n("main",["main"]),this.header=new a(this.containerDOM),this.page=1,this.addListeners()}start(){this.header.render(),this.containerDOM.append(this.mainDOM),this.render("garage")}render(t){const e="garage"===t?new m(this.page):new w;this.mainDOM.innerHTML="",this.mainDOM.append(e.render())}addListeners(){window.addEventListener("renderGaragePage",(()=>this.render("garage"))),window.addEventListener("renderWinnersPage",(()=>this.render("winners"))),window.addEventListener("prevPage",(()=>{this.page-=1})),window.addEventListener("nextPage",(()=>{this.page+=1}))}}window.addEventListener("DOMContentLoaded",(()=>{(new M).start()}))}();